Object subclass: #Casa	instanceVariableNames: 'artefactos'	classVariableNames: ''	package: 'finalCasa'!!Casa methodsFor: 'initialization' stamp: 'valu 9/13/2020 18:50'!initialize 	artefactos := OrderedCollection new.! !!Casa methodsFor: 'as yet unclassified' stamp: 'valu 9/13/2020 18:50'!comprarArtefacto: unArtefacto 	artefactos add: unArtefacto.! !!Casa methodsFor: 'as yet unclassified' stamp: 'valu 9/13/2020 18:57'!gastoTotal		| gastoTotal |		gastoTotal := artefactos inject: 0 into: [ :acumulador :artefacto | acumulador + artefacto gasto ]. 		^ gastoTotal.! !Object subclass: #CercoElectrico	instanceVariableNames: 'metros precioKw'	classVariableNames: ''	package: 'finalCasa'!!CercoElectrico methodsFor: 'as yet unclassified' stamp: 'valu 9/13/2020 19:08'!gasto	^ (metros * precioKw).! !!CercoElectrico methodsFor: 'as yet unclassified' stamp: 'valu 9/13/2020 19:07'!paraMetros: unosMetros conPrecioKw: unPrecio 	metros := unosMetros.	precioKw := unPrecio.  ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!CercoElectrico class	instanceVariableNames: ''!!CercoElectrico class methodsFor: 'as yet unclassified' stamp: 'valu 9/13/2020 19:07'!paraMetros: metros conPrecioKw: precio 	| cerco |	cerco := CercoElectrico new.	cerco paraMetros: metros conPrecioKw: precio.	^ cerco. ! !Object subclass: #Estufa	instanceVariableNames: 'ambientes precioKw calorias'	classVariableNames: ''	package: 'finalCasa'!!Estufa methodsFor: 'as yet unclassified' stamp: 'valu 9/13/2020 18:45'!conAmbientes: unosAmbientes precio: precio yCalorias: unasCalorias	ambientes := unosAmbientes.	precioKw := precio.	calorias := unasCalorias.   ! !!Estufa methodsFor: 'as yet unclassified' stamp: 'valu 9/13/2020 18:57'!gasto	^ (precioKw * ambientes * calorias). ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Estufa class	instanceVariableNames: ''!!Estufa class methodsFor: 'as yet unclassified' stamp: 'valu 9/13/2020 18:44'!paraAmbiente: ambientes precioKw: precio yCalorias: calorias 	| estufa |	estufa := Estufa new.	estufa conAmbientes: ambientes precio: precio yCalorias: calorias.	^ estufa.! !Object subclass: #LosaRadiante	instanceVariableNames: 'metros precioKw'	classVariableNames: ''	package: 'finalCasa'!!LosaRadiante methodsFor: 'as yet unclassified' stamp: 'valu 9/13/2020 19:01'!conMetros: unosMetros yPrecioKw: unPrecio 	metros := unosMetros.	precioKw := unPrecio.  ! !!LosaRadiante methodsFor: 'as yet unclassified' stamp: 'valu 9/13/2020 19:02'!gasto	^ (metros * metros * precioKw).! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!LosaRadiante class	instanceVariableNames: ''!!LosaRadiante class methodsFor: 'as yet unclassified' stamp: 'valu 9/13/2020 19:01'!paraMetros: metros conPrecioKw: precio  	| losa |	losa := LosaRadiante new.	losa conMetros: metros yPrecioKw: precio.	^ losa. ! !Error subclass: #NoSePuedeCalcularPrecioDeSalamandraSinMaderaError	instanceVariableNames: ''	classVariableNames: ''	package: 'finalCasa'!Object subclass: #Pino	instanceVariableNames: 'kilos metros precioPorKilo coefCalorico'	classVariableNames: ''	package: 'finalCasa'!!Pino methodsFor: 'initialization' stamp: 'valu 9/13/2020 19:30'!initialize 	precioPorKilo := 2.	coefCalorico := 3.	! !!Pino methodsFor: 'as yet unclassified' stamp: 'valu 9/13/2020 19:34'!gasto	^ ((metros * metros * kilos * precioPorKilo) / coefCalorico) asFloat.! !!Pino methodsFor: 'as yet unclassified' stamp: 'valu 9/13/2020 19:27'!conKilos: kg yMetros: mtrs 	kilos := kg.	metros := mtrs. ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Pino class	instanceVariableNames: ''!!Pino class methodsFor: 'as yet unclassified' stamp: 'valu 9/13/2020 19:26'!conKilos: kg yMetros: metros 	| pino |	pino := Pino new.	pino conKilos: kg yMetros: metros.	^ pino.! !Object subclass: #Salamandra	instanceVariableNames: 'maderas'	classVariableNames: ''	package: 'finalCasa'!!Salamandra methodsFor: 'initialization' stamp: 'valu 9/13/2020 19:23'!initialize 	maderas := OrderedCollection new.! !!Salamandra methodsFor: 'as yet unclassified' stamp: 'valu 9/13/2020 19:27'!determinarMadera: unaMadera 	maderas add: unaMadera.! !!Salamandra methodsFor: 'as yet unclassified' stamp: 'valu 9/13/2020 19:28'!gasto		| gastoTotal |	(maderas isEmpty) ifTrue: [ NoSePuedeCalcularPrecioDeSalamandraSinMaderaError signal ].		gastoTotal := maderas inject: 0 into: [ :acumulador :madera | acumulador + madera gasto ].	^ gastoTotal.  	! !