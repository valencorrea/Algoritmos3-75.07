TestCase subclass: #TestAveriado	instanceVariableNames: ''	classVariableNames: ''	package: 'ParcialAlgo3Tests'!!TestAveriado methodsFor: 'tests' stamp: 'VAL 6/30/2020 19:58'!test01VehiculoAveriadoNoSePuedeUsar	|estadoVehiculo unEstado |		estadoVehiculo := Averiado new.	unEstado := estadoVehiculo puedoUsarVehiculo.		self deny: unEstado.	! !TestCase subclass: #TestMotoDeCarrera	instanceVariableNames: ''	classVariableNames: ''	package: 'ParcialAlgo3Tests'!!TestMotoDeCarrera methodsFor: 'tests' stamp: 'VAL 6/30/2020 20:02'!test02motoDeCarreraAvanza480kmEn2Hs	| unaMotoDeCarrera unValor |		unaMotoDeCarrera := VehiculoTerrestre crearMotoDeCarrera.		unValor := unaMotoDeCarrera cantidadKmAlAvanzarHoras: 2.		self assert: unValor equals: 480.! !!TestMotoDeCarrera methodsFor: 'tests' stamp: 'VAL 6/30/2020 20:02'!test01motoDeCarreraAveriadaNoPuedeRecorrerKm	| unaMotoDeCarrera |		unaMotoDeCarrera := VehiculoTerrestre crearMotoDeCarrera.	unaMotoDeCarrera romperVehiculo. 		self should: [ unaMotoDeCarrera cantidadKmAlAvanzarHoras: 2 ] raise: NoSePuedeUsarUnVehiculoAveriadoError.			! !TestCase subclass: #TestMotoneta	instanceVariableNames: 'unValor'	classVariableNames: ''	package: 'ParcialAlgo3Tests'!!TestMotoneta methodsFor: 'tests' stamp: 'VAL 6/30/2020 20:06'!test02motonetaAveriadaNoPuedeRecorrerKm	| unaMotoneta |		unaMotoneta := VehiculoTerrestre crearMotoneta.	unaMotoneta romperVehiculo. 		self should: [ unaMotoneta cantidadKmAlAvanzarHoras: 2 ] raise: NoSePuedeUsarUnVehiculoAveriadoError.			! !!TestMotoneta methodsFor: 'tests' stamp: 'VAL 6/30/2020 20:36'!test01MotonetaAvanza80kmEnDosHs	"comment stating purpose of message"	| unaMotoneta |	unaMotoneta := VehiculoTerrestre crearMotoneta .	self assert: [(unaMotoneta cantidadKmAlAvanzarHoras: 2 )= 80].		"test de la catedra sin modificar"! !TestCase subclass: #TestNoAveriado	instanceVariableNames: ''	classVariableNames: ''	package: 'ParcialAlgo3Tests'!!TestNoAveriado methodsFor: 'tests' stamp: 'VAL 6/30/2020 19:59'!test01VehiculoNoAveriadoSePuedeUsar	|estadoVehiculo unEstado |		estadoVehiculo := NoAveriado new.	unEstado := estadoVehiculo puedoUsarVehiculo.		self assert: unEstado.	! !