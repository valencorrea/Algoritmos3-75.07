Object subclass: #AlgoFix	instanceVariableNames: 'pintores'	classVariableNames: ''	package: 'TP1'!!AlgoFix methodsFor: 'as yet unclassified' stamp: 'val 5/27/2020 03:17'!crearPintura: unNombre conPrecioPorLitro: unPrecio manosPincel: manosPincel manosRodillo: manosRodillo 	^ Pintura conNombre: unNombre yPrecio: unPrecio yManosPincel: manosPincel yManosRodillo: manosRodillo.! !!AlgoFix methodsFor: 'as yet unclassified' stamp: 'val 5/27/2020 03:17'!registrarPintorDeRodillo: unPintor conValorHora: unValor	pintores add: (Pintor conNombre: unPintor yValor: unValor yTecnica: (TecnicaRodillo new)).	! !!AlgoFix methodsFor: 'as yet unclassified' stamp: 'val 5/27/2020 03:17'!registrarPintorDePincel: unPintor conValorHora: unValor	pintores add: (Pintor conNombre: unPintor yValor: unValor yTecnica: (TecnicaPincel new)).	! !!AlgoFix methodsFor: 'as yet unclassified' stamp: 'val 5/27/2020 03:17'!presupuestoMasBaratoParaPintarMetrosCuadrados: unosMetros conPintura: unaPintura	| unPresupuesto |	unPresupuesto := Presupuesto new.	^ unPresupuesto pintorMasEconomicoDePintores: pintores paraMetros: unosMetros conPintura: unaPintura. ! !!AlgoFix methodsFor: 'as yet unclassified' stamp: 'valen 5/22/2020 05:49'!manoDeObra: unaManoDeObra	masMateriales: unosMateriales	^ unaManoDeObra + unosMateriales. ! !!AlgoFix methodsFor: 'initialization' stamp: 'valen 5/22/2020 05:35'!initialize 	pintores := OrderedCollection new.! !Error subclass: #NoHayPinturaParaCalcularPresupuesto	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Error subclass: #NoSeEnvioUnPunteroDePintores	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Error subclass: #NoSePuedeRegistrarPintorSinNombre	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Error subclass: #NoSeRegistraronPintores	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Error subclass: #NoSeRegistroNombrePintura	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Object subclass: #Pintor	instanceVariableNames: 'nombre precioPorHora tecnica'	classVariableNames: ''	package: 'TP1'!!Pintor methodsFor: 'as yet unclassified' stamp: 'val 5/27/2020 22:33'!presupuestoManoDeObraParaMetros: unosMetros conPintura: unaPintura	^ tecnica presupuestoManoDeObraParaMetros: unosMetros conPintor: self yPintura: unaPintura.	! !!Pintor methodsFor: 'as yet unclassified' stamp: 'val 5/27/2020 22:32'!presupuestoMaterialesParaMetros: unosMetros yPintura: unaPintura	^ tecnica presupuestoMaterialesParaMetros: unosMetros yPintura: unaPintura.! !!Pintor methodsFor: 'as yet unclassified' stamp: 'val 5/27/2020 05:10'!setearNombre: unNombre yPrecio: unValor yTecnica: unaTecnica	nombre := unNombre.	precioPorHora := unValor.	tecnica := unaTecnica. ! !!Pintor methodsFor: 'accessing' stamp: 'valen 5/22/2020 06:56'!nombre	^ nombre.! !!Pintor methodsFor: 'accessing' stamp: 'valen 5/22/2020 05:17'!precioPorHora	^ precioPorHora. ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Pintor class	instanceVariableNames: ''!!Pintor class methodsFor: 'as yet unclassified' stamp: 'val 5/27/2020 05:11'!conNombre: unNombre yValor: unValor yTecnica: unaTecnica	| unPintor |		unNombre ifNil: [ NoSePuedeRegistrarPintorSinNombre signal ].	unPintor := self new.	unPintor setearNombre: unNombre yPrecio: unValor yTecnica: unaTecnica.	^ unPintor. ! !Object subclass: #Pintura	instanceVariableNames: 'nombre precio manosPincel manosRodillo'	classVariableNames: ''	package: 'TP1'!!Pintura methodsFor: 'as yet unclassified' stamp: 'val 5/27/2020 01:00'!calcularPrecioMaterialesDe: unPintor paraMetros: unosMetros 	^ unPintor presupuestoMaterialesParaMetros: unosMetros yPintura: self! !!Pintura methodsFor: 'as yet unclassified' stamp: 'valen 5/22/2020 04:57'!setearNombre: unNombre yPrecio: unPrecio yManosPincel: unasManosPincel yManosRodillo: unasManosRodillo	nombre := unNombre.	precio := unPrecio.  	manosPincel := unasManosPincel.	manosRodillo := unasManosRodillo.! !!Pintura methodsFor: 'as yet unclassified' stamp: 'valen 5/22/2020 05:05'!manosRodillo	^ manosRodillo.! !!Pintura methodsFor: 'as yet unclassified' stamp: 'val 5/23/2020 20:50'!precio	^ precio.! !!Pintura methodsFor: 'accessing' stamp: 'valen 5/22/2020 05:04'!manosPincel	^ manosPincel. ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Pintura class	instanceVariableNames: ''!!Pintura class methodsFor: 'as yet unclassified' stamp: 'val 5/27/2020 02:50'!conNombre: unNombre yPrecio: unPrecio yManosPincel: manosPincel yManosRodillo: manosRodillo	| unaPintura |		unNombre ifNil: [ NoSeRegistroNombrePintura signal ].	unaPintura := self new.	unaPintura setearNombre: unNombre yPrecio: unPrecio yManosPincel: manosPincel yManosRodillo: manosRodillo.	^ unaPintura.  ! !Object subclass: #Presupuesto	instanceVariableNames: 'pintor metros pintura'	classVariableNames: ''	package: 'TP1'!!Presupuesto methodsFor: 'as yet unclassified' stamp: 'val 5/23/2020 21:48'!contabilizarGastosPara: unPintor conMetros: unosMetros yPintura: unaPintura	^ (unPintor presupuestoManoDeObraParaMetros: unosMetros conPintura: unaPintura) + (unaPintura calcularPrecioMaterialesDe: unPintor paraMetros: unosMetros).! !!Presupuesto methodsFor: 'as yet unclassified' stamp: 'val 5/23/2020 19:18'!valor	^ self contabilizarGastosPara: pintor conMetros: metros yPintura: pintura.! !!Presupuesto methodsFor: 'as yet unclassified' stamp: 'val 5/23/2020 19:24'!guardarpintor: pintorBarato conMetros: unosMetros yPintura: unaPintura	pintor := pintorBarato.	metros := unosMetros.	pintura := unaPintura.! !!Presupuesto methodsFor: 'as yet unclassified' stamp: 'val 5/23/2020 19:15'!responsable	^ pintor nombre.! !!Presupuesto methodsFor: 'as yet unclassified' stamp: 'val 5/27/2020 18:16'!pintorMasEconomicoDePintores: pintores paraMetros: unosMetros conPintura: unaPintura	| pintorBarato |		pintores ifNil: [ NoSeEnvioUnPunteroDePintores signal ].	(pintores isEmpty) ifTrue: [ NoSeRegistraronPintores signal ].	unaPintura ifNil: [ NoHayPinturaParaCalcularPresupuesto signal ].		pintorBarato := pintores detectMin: [ :unPintor | (self contabilizarGastosPara: unPintor conMetros: unosMetros yPintura: unaPintura) ].	self guardarpintor: pintorBarato conMetros: unosMetros yPintura: unaPintura.	^ self.! !Object subclass: #Tecnica	instanceVariableNames: 'duracion litros'	classVariableNames: ''	package: 'TP1'!!Tecnica methodsFor: 'accessing' stamp: 'val 5/25/2020 00:02'!duracion	^ duracion.! !!Tecnica methodsFor: 'as yet unclassified' stamp: 'val 5/25/2020 00:03'!litrosTecnica	^ litros.! !!Tecnica methodsFor: 'as yet unclassified' stamp: 'val 5/24/2020 23:59'!manosNecesariasConPintura: unaPintura	self subclassResponsibility.! !!Tecnica methodsFor: 'as yet unclassified' stamp: 'val 5/27/2020 19:30'!presupuestoMaterialesParaMetros: unosMetros yPintura: unaPintura	^ unosMetros * (self litrosTecnica) * (self manosNecesariasConPintura: unaPintura) * unaPintura precio.! !!Tecnica methodsFor: 'as yet unclassified' stamp: 'val 5/25/2020 00:00'!presupuestoManoDeObraParaMetros: unosMetros conPintor: unPintor yPintura: unaPintura	self subclassResponsibility.! !Tecnica subclass: #TecnicaPincel	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!TecnicaPincel methodsFor: 'as yet unclassified' stamp: 'valen 5/22/2020 05:30'!manosNecesariasConPintura: unaPintura	^ unaPintura manosPincel.! !!TecnicaPincel methodsFor: 'as yet unclassified' stamp: 'val 5/23/2020 20:34'!presupuestoManoDeObraParaMetros: unosMetros conPintor: unPintor yPintura: unaPintura	(unosMetros > 40) ifTrue: [ ^ (unosMetros * unPintor precioPorHora * (self duracion) * (self manosNecesariasConPintura: unaPintura)) * self descuento ].	^ (unosMetros * unPintor precioPorHora * (self duracion) * (self manosNecesariasConPintura: unaPintura)).		! !!TecnicaPincel methodsFor: 'as yet unclassified' stamp: 'val 5/23/2020 20:34'!descuento	^ 0.5.! !!TecnicaPincel methodsFor: 'initialization' stamp: 'val 5/23/2020 21:04'!initialize 		duracion := 2.	litros := 4.! !Tecnica subclass: #TecnicaRodillo	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!TecnicaRodillo methodsFor: 'as yet unclassified' stamp: 'valen 5/22/2020 05:29'!manosNecesariasConPintura: unaPintura	^ unaPintura manosRodillo.! !!TecnicaRodillo methodsFor: 'as yet unclassified' stamp: 'val 5/23/2020 19:51'!presupuestoManoDeObraParaMetros: unosMetros conPintor: unPintor yPintura: unaPintura	^ (unosMetros * unPintor precioPorHora * (self duracion) * (self manosNecesariasConPintura: unaPintura)).		! !!TecnicaRodillo methodsFor: 'initialization' stamp: 'val 5/23/2020 21:04'!initialize 		duracion := 1.	litros := 5.! !